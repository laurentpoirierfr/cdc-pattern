version: "3"

services:
  zookeeper:
    image: debezium/zookeeper:1.6
    container_name: zookeeper
    ports:
      - 2181:2181

  kafka:
    image: debezium/kafka:1.6
    container_name: kafka
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    hostname: kafka

  postgres:
    build:
      context: postgres
      dockerfile: Dockerfile
    #image: postgres
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"  # Pour debezium

  postgres-connector:
    image: debezium/connect:1.6
    container_name: postgres-debezium
    ports:
      - 9090:8083
    links:
      - kafka
    depends_on:
      - kafka
      - postgres
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=pg
      - CONFIG_STORAGE_TOPIC=pg_connect_configs
      - OFFSET_STORAGE_TOPIC=pg_connect_offsets
      - STATUS_STORAGE_TOPIC=pg_connect_statuses

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      - DYNAMIC_CONFIG_ENABLED=true